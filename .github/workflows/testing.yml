name: Testing

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.8, 3.9]
    steps:
    - uses: actions/checkout@v2

    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.py }}
        auto-update-conda: true
        channels: conda-forge,defaults
        channel-priority: strict
        show-channel-urls: true

    - name: install reqs
      run: |
        conda install pip libgomp pytest pyccl cython
        pip install cobaya

    # - name: install deps
    #   run: |
    #     conda install \
    #       pip \
    #       numpy nose coveralls flake8 pyyaml gsl fftw cmake swig scipy \
    #       compilers pkg-config setuptools_scm pytest pandas pytest-cov \
    #       cython "camb>=1" isitgr traitlets fast-pt
    #     # if [[ ${MATRIX_OS} == "macos-latest" ]]; then
    #     #   conda install llvm-openmp
    #     #   echo "DYLD_FALLBACK_LIBRARY_PATH=${CONDA_PREFIX}/lib" >> $GITHUB_ENV
    #     #   SDKROOT=$(xcrun --sdk macosx --show-sdk-path)
    #     #   echo "SDKROOT: ${SDKROOT}"
    #     #   echo "SDKROOT=${SDKROOT}" >> $GITHUB_ENV
    #     #   echo "CONDA_BUILD_SYSROOT=${SDKROOT}" >> $GITHUB_ENV
    #     fi
    #   env:
    #     MATRIX_OS: ${{ matrix.os }}

    # - name: Install camb
    #   run: |
    #     conda install camb


    - name: Install classy
      run: |
        if [[ ${MATRIX_OS} == "macos-latest" ]]; then
          . ci_scripts/install_class_osx.sh
        else
          . ci_scripts/install_class_linux.sh
        fi
      env:
        MATRIX_OS: ${{ matrix.os }}

    - name: install
      run: |
        pip install .

    - name: Unit tests
      run: |
        pytest -vv soliket
