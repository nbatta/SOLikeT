[runtime]
; The emcee sampler, which uses the Goodman & Weare algorithm
sampler = emcee

[emcee]
; The emcee sampler uses the concept of walkers, a collection
; of live points.  Sampling is done along lines that connect
; pairs of walkers.  The number of walkers must be at least
; 2*nparam + 1, but in general more than that usually works
; better.
walkers = 20
; This many samples is overkill, just to make the plots
; look a lot nicer
samples = 1000
; This is the interval at which convergence diagnostics
; are performed
nsteps = 1


[output] 
filename=chains/vanilla_planck_ACTPol_s2_taup_tt.txt
format=text
verbosity=quiet

;[test]
;; These are the parameters for this sampler.
;; In this case there is just one parameter
;save_dir=modpk_output_1

;; If something goes wrong this will aid diagnosis
;fatal_errors=T

; The pipeline section contains information
; that describes the sequence of calculations
; to be done and what we want out at the end
[pipeline]
; The list of modules to be run, in this order.
; The modules named here must appear as sections below
modules = consistency camb planck actpol
; The file to get cosmological and nuisance parameters
; from.
values = demos/vanilla_ACTPol_s2_like_values.ini
; Not used here, becuase we are not sampling
likelihoods =  planck2015 actpol
extra_output = 
quiet=F
debug=T
timing=F
priors = demos/vanilla_ACTPol_priors.ini

[actpol]
file = cosmosis-standard-library/likelihood/actpollite_s2_like/actpol.so
use_act_tt = T
use_act_te = F 
use_act_ee = F
act_tt_lmax = 6000

[planck]
file = cosmosis-standard-library/likelihood/planck2015/planck_interface.so               
; The Planck module has some file paths it needs setting
; These files can all be downloaded from the Planck archives 
data_1 = cosmosis-standard-library/likelihood/planck2015/data/hi_l/plik_lite/plik_lite_v18_TTTEEE.clik
data_2 = cosmosis-standard-library/likelihood/planck2015/data/low_l/bflike/lowl_SMW_70_dx11d_2014_10_03_v5c_Ap.clik

; The consistency module translates between our chosen parameterization
; and any other that modules in the pipeline may want (e.g. camb)
[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

; A module!  Camb, set to a mode where it does
; background evolution, CMB, and matter power
[camb]
file =  cosmosis-standard-library/boltzmann/camb/camb.so
mode=cmb
lmax=9000
feedback=0
do_tensors=F
do_lensing=T
do_nonlinear=T
high_ell_template=cosmosis-standard-library/boltzmann/camb/camb_Jan15/HighLExtrapTemplate_lenspotentialCls.dat 